/**
 * –°–∏—Å—Ç–µ–º–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */

interface SecurityIssue {
  id: string
  severity: 'low' | 'medium' | 'high' | 'critical'
  category: 'authentication' | 'authorization' | 'data' | 'network' | 'crypto' | 'input' | 'configuration'
  title: string
  description: string
  recommendation: string
  location?: string
  evidence?: any
}

interface SecurityScanResult {
  timestamp: Date
  totalIssues: number
  issuesBySeverity: Record<string, number>
  issuesByCategory: Record<string, number>
  issues: SecurityIssue[]
  score: number // 0-100, –≥–¥–µ 100 = –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ–∑–æ–ø–∞—Å–Ω–æ
}

export class SecurityScanner {
  private issues: SecurityIssue[] = []
  private scanId: string = ''

  /**
   * –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  async performFullScan(): Promise<SecurityScanResult> {
    this.scanId = `scan_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
    this.issues = []

    console.log(`üîç Starting security scan ${this.scanId}`)

    // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    await Promise.all([
      this.scanAuthentication(),
      this.scanAuthorization(),
      this.scanDataSecurity(),
      this.scanNetworkSecurity(),
      this.scanCryptographicSecurity(),
      this.scanInputValidation(),
      this.scanConfiguration(),
      this.scanDependencies(),
      this.scanAPIEndpoints()
    ])

    return this.generateReport()
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  private async scanAuthentication(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ JWT
    if (!process.env.NEXTAUTH_SECRET || process.env.NEXTAUTH_SECRET.length < 32) {
      this.addIssue({
        severity: 'critical',
        category: 'authentication',
        title: '–°–ª–∞–±—ã–π –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π JWT —Å–µ–∫—Ä–µ—Ç',
        description: 'JWT —Å–µ–∫—Ä–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞',
        recommendation: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ NEXTAUTH_SECRET —Å –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–ª–∏–Ω–æ–π –º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞',
        location: 'Environment variables'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram Bot —Ç–æ–∫–µ–Ω–∞
    if (!process.env.TELEGRAM_BOT_TOKEN) {
      this.addIssue({
        severity: 'high',
        category: 'authentication',
        title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Telegram Bot —Ç–æ–∫–µ–Ω',
        description: 'Telegram Bot —Ç–æ–∫–µ–Ω –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        recommendation: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è',
        location: 'Environment variables'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–π
    const sessionTimeout = process.env.SESSION_TIMEOUT
    if (!sessionTimeout || parseInt(sessionTimeout) > 86400) { // 24 —á–∞—Å–∞
      this.addIssue({
        severity: 'medium',
        category: 'authentication',
        title: '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π timeout —Å–µ—Å—Å–∏–π',
        description: '–°–µ—Å—Å–∏–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏',
        recommendation: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SESSION_TIMEOUT –Ω–µ –±–æ–ª–µ–µ 86400 —Å–µ–∫—É–Ω–¥ (24 —á–∞—Å–∞)',
        location: 'Session configuration'
      })
    }
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
   */
  private async scanAuthorization(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º middleware –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const authMiddlewareExists = await this.checkFileExists('src/lib/auth/auth-utils.ts')
    if (!authMiddlewareExists) {
      this.addIssue({
        severity: 'critical',
        category: 'authorization',
        title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç middleware –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        description: '–ù–µ –Ω–∞–π–¥–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        recommendation: '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª src/lib/auth/auth-utils.ts —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        location: 'src/lib/auth/auth-utils.ts'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—Ç—É –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ä–æ—É—Ç–æ–≤
    const adminRoutes = [
      'src/app/api/admin/backup/route.ts',
      'src/app/api/admin/security/scan/route.ts',
      'src/app/api/admin/metrics/route.ts'
    ]

    for (const route of adminRoutes) {
      const hasAuth = await this.checkRouteHasAuth(route)
      if (!hasAuth) {
        this.addIssue({
          severity: 'critical',
          category: 'authorization',
          title: '–ù–µ–∑–∞—â–∏—â–µ–Ω–Ω—ã–π –∞–¥–º–∏–Ω—Å–∫–∏–π —Ä–æ—É—Ç',
          description: `–ê–¥–º–∏–Ω—Å–∫–∏–π —Ä–æ—É—Ç ${route} –Ω–µ –∑–∞—â–∏—â–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π`,
          recommendation: '–î–æ–±–∞–≤—å—Ç–µ withAuth middleware –∫–æ –≤—Å–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–º —Ä–æ—É—Ç–∞–º',
          location: route
        })
      }
    }
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
   */
  private async scanDataSecurity(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
    if (!process.env.ENCRYPTION_KEY) {
      this.addIssue({
        severity: 'critical',
        category: 'data',
        title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è',
        description: 'ENCRYPTION_KEY –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π –∫–æ—à–µ–ª—å–∫–æ–≤',
        recommendation: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ENCRYPTION_KEY —Å –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º',
        location: 'Environment variables'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const dbUrl = process.env.DATABASE_URL
    if (dbUrl && !dbUrl.includes('sslmode=require') && !dbUrl.includes('localhost')) {
      this.addIssue({
        severity: 'high',
        category: 'data',
        title: '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç SSL',
        description: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SSL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞',
        recommendation: '–î–æ–±–∞–≤—å—Ç–µ sslmode=require –∫ DATABASE_URL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏—è',
        location: 'Database configuration'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const sensitivePatterns = [
      'password',
      'private_key',
      'secret',
      'token'
    ]

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private async scanNetworkSecurity(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const corsConfig = process.env.CORS_ORIGIN
    if (!corsConfig || corsConfig === '*') {
      this.addIssue({
        severity: 'high',
        category: 'network',
        title: '–ù–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
        description: 'CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –ø—Ä–∏–µ–º –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ª—é–±—ã—Ö –¥–æ–º–µ–Ω–æ–≤',
        recommendation: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ CORS_ORIGIN –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã –≤–º–µ—Å—Ç–æ "*"',
        location: 'CORS configuration'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTPS
    const nodeEnv = process.env.NODE_ENV
    const nextPublicUrl = process.env.NEXT_PUBLIC_API_URL
    if (nodeEnv === 'production' && nextPublicUrl && !nextPublicUrl.startsWith('https://')) {
      this.addIssue({
        severity: 'critical',
        category: 'network',
        title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç HTTPS –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ',
        description: '–ü—Ä–æ–¥–∞–∫—à–Ω –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è',
        recommendation: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ HTTPS –∏ –æ–±–Ω–æ–≤–∏—Ç–µ NEXT_PUBLIC_API_URL',
        location: 'Network configuration'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º rate limiting
    const hasRateLimit = await this.checkFileExists('src/lib/rate-limit.ts')
    if (!hasRateLimit) {
      this.addIssue({
        severity: 'medium',
        category: 'network',
        title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç rate limiting',
        description: 'API –Ω–µ –∑–∞—â–∏—â–µ–Ω–æ –æ—Ç –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ rate limiting',
        recommendation: '–†–µ–∞–ª–∏–∑—É–π—Ç–µ rate limiting –¥–ª—è API endpoints',
        location: 'API middleware'
      })
    }
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private async scanCryptographicSecurity(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Solana RPC URL
    const solanaRpc = process.env.NEXT_PUBLIC_SOLANA_RPC_URL
    if (solanaRpc && !solanaRpc.startsWith('https://')) {
      this.addIssue({
        severity: 'medium',
        category: 'crypto',
        title: '–ù–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ RPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ',
        description: 'Solana RPC –¥–æ–ª–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTPS',
        recommendation: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS URL –¥–ª—è NEXT_PUBLIC_SOLANA_RPC_URL',
        location: 'Solana configuration'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è crypto.randomBytes –≤–º–µ—Å—Ç–æ Math.random
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–≤–æ–¥–∞
   */
  private async scanInputValidation(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ API —Ä–æ—É—Ç–∞—Ö
    const apiRoutes = [
      'src/app/api/defi/swap/route.ts',
      'src/app/api/defi/staking/route.ts',
      'src/app/api/defi/lending/route.ts'
    ]

    for (const route of apiRoutes) {
      const hasValidation = await this.checkRouteHasValidation(route)
      if (!hasValidation) {
        this.addIssue({
          severity: 'medium',
          category: 'input',
          title: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞',
          description: `API —Ä–æ—É—Ç ${route} –º–æ–∂–µ—Ç –Ω–µ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`,
          recommendation: '–î–æ–±–∞–≤—å—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤—Å–µ—Ö –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤',
          location: route
        })
      }
    }
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   */
  private async scanConfiguration(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
    if (process.env.NODE_ENV === 'production') {
      if (process.env.NEXT_PUBLIC_DEV_MODE === 'true') {
        this.addIssue({
          severity: 'high',
          category: 'configuration',
          title: '–í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ',
          description: 'NEXT_PUBLIC_DEV_MODE –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ',
          recommendation: '–û—Ç–∫–ª—é—á–∏—Ç–µ NEXT_PUBLIC_DEV_MODE –≤ –ø—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏–∏',
          location: 'Environment configuration'
        })
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    const logLevel = process.env.LOG_LEVEL
    if (!logLevel || logLevel === 'debug') {
      this.addIssue({
        severity: 'low',
        category: 'configuration',
        title: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ',
        description: '–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –ø–æ–¥—Ä–æ–±–Ω—ã–º –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞',
        recommendation: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ LOG_LEVEL –≤ "warn" –∏–ª–∏ "error" –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞',
        location: 'Logging configuration'
      })
    }
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
   */
  private async scanDependencies(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å npm audit –∏–ª–∏ snyk
    
    this.addIssue({
      severity: 'low',
      category: 'configuration',
      title: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∞—É–¥–∏—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π',
      description: '–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏',
      recommendation: '–ó–∞–ø—É—Å–∫–∞–π—Ç–µ npm audit –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Snyk –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π',
      location: 'package.json'
    })
  }

  /**
   * –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
   */
  private async scanAPIEndpoints(): Promise<void> {
    const sensitiveEndpoints = [
      'src/app/api/wallet/route.ts',
      'src/app/api/auth/telegram/route.ts',
      'src/app/api/onchain/transfers/route.ts'
    ]

    for (const endpoint of sensitiveEndpoints) {
      const hasAuth = await this.checkRouteHasAuth(endpoint)
      if (!hasAuth) {
        this.addIssue({
          severity: 'high',
          category: 'authorization',
          title: '–ù–µ–∑–∞—â–∏—â–µ–Ω–Ω—ã–π —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π endpoint',
          description: `Endpoint ${endpoint} —Å–æ–¥–µ—Ä–∂–∏—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–æ –Ω–µ –∑–∞—â–∏—â–µ–Ω`,
          recommendation: '–î–æ–±–∞–≤—å—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫–æ –≤—Å–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º endpoints',
          location: endpoint
        })
      }
    }
  }

  /**
   * –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private addIssue(issue: Omit<SecurityIssue, 'id'>): void {
    this.issues.push({
      id: `${this.scanId}_issue_${this.issues.length + 1}`,
      ...issue
    })
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
   */
  private async checkFileExists(path: string): Promise<boolean> {
    try {
      if (typeof window !== 'undefined') {
        return false // –í –±—Ä–∞—É–∑–µ—Ä–µ –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª—ã
      }
      
      const fs = await import('fs')
      return fs.existsSync(path)
    } catch {
      return false
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ —Ä–æ—É—Ç–µ
   */
  private async checkRouteHasAuth(routePath: string): Promise<boolean> {
    try {
      if (typeof window !== 'undefined') {
        return true // –í –±—Ä–∞—É–∑–µ—Ä–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å
      }

      const fs = await import('fs')
      if (!fs.existsSync(routePath)) {
        return false
      }

      const content = fs.readFileSync(routePath, 'utf8')
      return content.includes('withAuth') || content.includes('requireAuth')
    } catch {
      return false
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤ —Ä–æ—É—Ç–µ
   */
  private async checkRouteHasValidation(routePath: string): Promise<boolean> {
    try {
      if (typeof window !== 'undefined') {
        return true // –í –±—Ä–∞—É–∑–µ—Ä–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å
      }

      const fs = await import('fs')
      if (!fs.existsSync(routePath)) {
        return false
      }

      const content = fs.readFileSync(routePath, 'utf8')
      return content.includes('validate') || 
             content.includes('schema') || 
             content.includes('joi') ||
             content.includes('zod') ||
             content.includes('typeof') ||
             content.includes('parseInt') ||
             content.includes('parseFloat')
    } catch {
      return false
    }
  }

  /**
   * –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
   */
  private generateReport(): SecurityScanResult {
    const issuesBySeverity = this.issues.reduce((acc, issue) => {
      acc[issue.severity] = (acc[issue.severity] || 0) + 1
      return acc
    }, {} as Record<string, number>)

    const issuesByCategory = this.issues.reduce((acc, issue) => {
      acc[issue.category] = (acc[issue.category] || 0) + 1
      return acc
    }, {} as Record<string, number>)

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Ü–µ–Ω–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    const score = this.calculateSecurityScore()

    return {
      timestamp: new Date(),
      totalIssues: this.issues.length,
      issuesBySeverity,
      issuesByCategory,
      issues: this.issues,
      score
    }
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ—Ü–µ–Ω–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private calculateSecurityScore(): number {
    let score = 100

    for (const issue of this.issues) {
      switch (issue.severity) {
        case 'critical':
          score -= 25
          break
        case 'high':
          score -= 15
          break
        case 'medium':
          score -= 8
          break
        case 'low':
          score -= 3
          break
      }
    }

    return Math.max(0, score)
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  getSecurityRecommendations(): string[] {
    const recommendations = [
      '–†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞',
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS –¥–ª—è –≤—Å–µ—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ',
      '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∞–ª–µ—Ä—Ç—ã',
      '–ü—Ä–æ–≤–æ–¥–∏—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∞—É–¥–∏—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–Ω—Ü–∏–ø –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π',
      '–®–∏—Ñ—Ä—É–π—Ç–µ –≤—Å–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
      '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WAF (Web Application Firewall)',
      '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ',
      '–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'
    ]

    return recommendations
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º singleton –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export const securityScanner = new SecurityScanner()
